/*
	Universidad Nacional Experimental de Guayana
	Proyecto de Carrera: Ing. Informatica
	Lenguajes y Compiladores.

	Integrantes
	Alexis Rondón
	Carlos Cesín
	Rover Gonzales
	Johans Cedeño
*/

// SECCION DE CODIGO DE USUARIO

import java_cup.runtime.Symbol;
import java.lang.System;
import java.io.*;

// SECCION DE DIRECTIVAS

%%

%full
%unicode
%line
%cup
%char
%eofval{
	{ return Token(sym.EOF); }
%eofval}

%{
	String tok = "";

	private Symbol Token(int token, Object lexema) throws IOException {
		int linea = yyline + 1;
    int caracter = yychar +1;
		tok = (String) lexema;
		if (token != sym.EOF)
			InformacionCodigo.guardarInformacionCodigo(linea,caracter,tok);
		return new Symbol(token, lexema);
	}

  private Symbol Token(int token, int lexema) throws IOException {
		int linea = yyline + 1;
    int caracter = yychar +1;
		tok = String.valueOf(lexema);
		if (token != sym.EOF)
			InformacionCodigo.guardarInformacionCodigo(linea,caracter,tok);
		return new Symbol(token, lexema);
	}

  private Symbol Token(int token, double lexema) throws IOException {
		int linea = yyline + 1;
    int caracter = yychar +1;
		tok = String.valueOf(lexema);
		if (token != sym.EOF)
			InformacionCodigo.guardarInformacionCodigo(linea,caracter,tok);
		return new Symbol(token, lexema);
	}

	private Symbol Token(int token) throws IOException {
		return Token(token, yytext());
	}

%}

any = .
digit = [0-9]
letter = [a-zA-Z]
lower = [a-z]
upper = [A-Z]

NLINE = [\r\n]
TKLIN = \r\n\r\n
TKTIT = ("Titulo:")({any})*(".")
COMMENTS = ("Comentarios")(\r\n)({any})*(".")(\r\n)
TKSECC_GRAM = "Gramatica"
TKSECC_COND = "Condiciones"
TKSECC_FIN = "Fin"
TKKEYW_PARAM = "parametro"
TKKEYW_VALOR = "valor"
TKKEYW_SIMBO = "simbolo"
TKKEYW_PASOS = "pasos"
TKKEYW_ANGUL = "angulo"
TKKEYW_POSIC = "posicion"
TKKEYW_MATRI = "matriz"
TKKEYW_GENER = "generatriz"
TKKEYW_PROBA = "probabilidad"
TKTYPE_ENT = "Entero"
TKTYPE_REAL = "Real"
TKINT = ({digit})+
TKREAL = ({digit})+["."]({digit})+
TKIDPAR = {lower}({digit}|{letter})*
TKSIMID = {upper}({digit})*
TKPAR_O = "("
TKPAR_C = ")"
TKCOMA = ","
TKDDOT = ":"
TKBRAC_O = "{"
TKBRAC_C = "}"
TKDLINE = "--"
TKARRW = "->"
TKASSIGN = ":="
TKMOVD = "#"
TKMOVND = "@"
TKMOVR = "$"
TKMOVL = "&"
TKPLUS = "+"
TKMIN = "-"
TKTIMES = "*"
TKDIV = "/"
TKEXP = \x5E
TKORD_L = "<"
TKORD_R = ">"
TKORD_E = "="
TKLOG_AND = \\"/"
TKLOG_OR = "/"\\
TKLOG_DIF = "~"
TKTRUE = "true"
TKFALSE = "false"

WHITE = [" "\t\f\r]+

%%

<YYINITIAL> {TKLIN}
{
  //  System.out.println("TKLIN:" + " char: " +yychar+" line: " +yyline);
   return Token(sym.TKLIN);
}

<YYINITIAL> {WHITE} { yychar = 0; }

<YYINITIAL> {TKTIT}
{
    // System.out.println("TKTIT:" + yytext().replaceAll("\\s+","").substring(7) + " char: " +yychar+" line: " +yyline);
   return Token(sym.TKTIT,yytext().replaceAll("\\s+","").substring(7));
}

<YYINITIAL> {COMMENTS} { yychar = 0; }

<YYINITIAL> {TKINT}
{
  //  System.out.println("TKINT:" + yytext() + " char: " +yychar+" line: " +yyline);
   return Token(sym.TKINT,Integer.parseInt(yytext()));
}

<YYINITIAL> {TKREAL}
{
  //  System.out.println("TKREAL:" + yytext() + " char: " +yychar+" line: " +yyline);
   return Token(sym.TKREAL,Double.parseDouble(yytext()));
}

<YYINITIAL> {TKSECC_GRAM}
{
  //  System.out.println("TKSECC:" + yytext() + " char: " +yychar+" line: " +yyline);
   return Token(sym.TKSECC_GRAM);
}

<YYINITIAL> {TKSECC_COND}
{
  //  System.out.println("TKSECC:" + yytext() + " char: " +yychar+" line: " +yyline);
   return Token(sym.TKSECC_COND);
}

<YYINITIAL> {TKSECC_FIN}
{
  //  System.out.println("TKSECC:" + yytext() + " char: " +yychar+" line: " +yyline);
   return Token(sym.TKSECC_FIN);
}

<YYINITIAL> {TKKEYW_PARAM}
{
  //  System.out.println("TKKEYW:" + yytext() + " char: " +yychar+" line: " +yyline);
   return Token(sym.TKKEYW_PARAM);
}

<YYINITIAL> {TKKEYW_VALOR}
{
  //  System.out.println("TKKEYW:" + yytext() + " char: " +yychar+" line: " +yyline);
   return Token(sym.TKKEYW_VALOR);
}

<YYINITIAL> {TKKEYW_SIMBO}
{
  //  System.out.println("TKKEYW:" + yytext() + " char: " +yychar+" line: " +yyline);
   return Token(sym.TKKEYW_SIMBO);
}

<YYINITIAL> {TKKEYW_PASOS}
{
  //  System.out.println("TKKEYW:" + yytext() + " char: " +yychar+" line: " +yyline);
   return Token(sym.TKKEYW_PASOS);
}

<YYINITIAL> {TKKEYW_ANGUL}
{
  //  System.out.println("TKKEYW:" + yytext() + " char: " +yychar+" line: " +yyline);
   return Token(sym.TKKEYW_ANGUL);
}

<YYINITIAL> {TKKEYW_POSIC}
{
  //  System.out.println("TKKEYW:" + yytext() + " char: " +yychar+" line: " +yyline);
   return Token(sym.TKKEYW_POSIC);
}

<YYINITIAL> {TKKEYW_MATRI}
{
  //  System.out.println("TKKEYW:" + yytext() + " char: " +yychar+" line: " +yyline);
   return Token(sym.TKKEYW_MATRI);
}

<YYINITIAL> {TKKEYW_GENER}
{
  //  System.out.println("TKKEYW:" + yytext() + " char: " +yychar+" line: " +yyline);
   return Token(sym.TKKEYW_GENER);
}

<YYINITIAL> {TKKEYW_PROBA}
{
  //  System.out.println("TKKEYW:" + yytext() + " char: " +yychar+" line: " +yyline);
   return Token(sym.TKKEYW_PROBA);
}

<YYINITIAL> {TKTYPE_ENT}
{
  //  System.out.println("TKTYPE:" + yytext() + " char: " +yychar+" line: " +yyline);
   return Token(sym.TKTYPE_ENT);
}

<YYINITIAL> {TKTYPE_REAL}
{
  //  System.out.println("TKTYPE:" + yytext() + " char: " +yychar+" line: " +yyline);
   return Token(sym.TKTYPE_REAL);
}

<YYINITIAL> {TKIDPAR}
{
  //  System.out.println("TKIDPAR:" + yytext() + " char: " +yychar+" line: " +yyline);
   return Token(sym.TKIDPAR,yytext());
}

<YYINITIAL> {TKSIMID}
{
  //  System.out.println("TKSIMID:" + yytext() + " char: " +yychar+" line: " +yyline);
   return Token(sym.TKSIMID,yytext());
}

<YYINITIAL> {TKPAR_O}
{
  //  System.out.println("TKSEP1:" + yytext() + " char: " +yychar+" line: " +yyline);
   return Token(sym.TKPAR_O);
}

<YYINITIAL> {TKPAR_C}
{
  //  System.out.println("TKSEP2:" + yytext() + " char: " +yychar+" line: " +yyline);
   return Token(sym.TKPAR_C);
}

<YYINITIAL> {TKCOMA}
{
  //  System.out.println("TKMOV:" + yytext() + " char: " +yychar+" line: " +yyline);
   return Token(sym.TKCOMA);
}

<YYINITIAL> {TKDDOT}
{
  //  System.out.println("TKOPER:" + yytext() + " char: " +yychar+" line: " +yyline);
   return Token(sym.TKDDOT);
}

<YYINITIAL> {TKBRAC_O}
{
  //  System.out.println("TKORD:" + yytext() + " char: " +yychar+" line: " +yyline);
   return Token(sym.TKBRAC_O);
}

<YYINITIAL> {TKBRAC_C}
{
  //  System.out.println("TKORD:" + yytext() + " char: " +yychar+" line: " +yyline);
   return Token(sym.TKBRAC_C);
}

<YYINITIAL> {TKDLINE}
{
  //  System.out.println("TKORD:" + yytext() + " char: " +yychar+" line: " +yyline);
   return Token(sym.TKDLINE);
}

<YYINITIAL> {TKARRW}
{
  //  System.out.println("TKORD:" + yytext() + " char: " +yychar+" line: " +yyline);
   return Token(sym.TKARRW);
}

<YYINITIAL> {TKASSIGN}
{
  //  System.out.println("TKORD:" + yytext() + " char: " +yychar+" line: " +yyline);
   return Token(sym.TKASSIGN);
}

<YYINITIAL> {TKMOVD}
{
  //  System.out.println("TKORD:" + yytext() + " char: " +yychar+" line: " +yyline);
   return Token(sym.TKMOVD);
}

<YYINITIAL> {TKMOVND}
{
  //  System.out.println("TKORD:" + yytext() + " char: " +yychar+" line: " +yyline);
   return Token(sym.TKMOVND);
}

<YYINITIAL> {TKMOVR}
{
  //  System.out.println("TKORD:" + yytext() + " char: " +yychar+" line: " +yyline);
   return Token(sym.TKMOVR);
}

<YYINITIAL> {TKMOVL}
{
  //  System.out.println("TKORD:" + yytext() + " char: " +yychar+" line: " +yyline);
   return Token(sym.TKMOVL);
}

<YYINITIAL> {TKPLUS}
{
  //  System.out.println("TKORD:" + yytext() + " char: " +yychar+" line: " +yyline);
   return Token(sym.TKPLUS);
}

<YYINITIAL> {TKMIN}
{
  //  System.out.println("TKORD:" + yytext() + " char: " +yychar+" line: " +yyline);
   return Token(sym.TKMIN);
}

<YYINITIAL> {TKTIMES}
{
  //  System.out.println("TKORD:" + yytext() + " char: " +yychar+" line: " +yyline);
   return Token(sym.TKTIMES);
}

<YYINITIAL> {TKDIV}
{
  //  System.out.println("TKORD:" + yytext() + " char: " +yychar+" line: " +yyline);
   return Token(sym.TKDIV);
}

<YYINITIAL> {TKEXP}
{
  //  System.out.println("TKORD:" + yytext() + " char: " +yychar+" line: " +yyline);
   return Token(sym.TKEXP);
}

<YYINITIAL> {TKORD_L}
{
  //  System.out.println("TKORD:" + yytext() + " char: " +yychar+" line: " +yyline);
   return Token(sym.TKORD_L);
}

<YYINITIAL> {TKORD_R}
{
  //  System.out.println("TKORD:" + yytext() + " char: " +yychar+" line: " +yyline);
   return Token(sym.TKORD_R);
}

<YYINITIAL> {TKORD_E}
{
  //  System.out.println("TKORD:" + yytext() + " char: " +yychar+" line: " +yyline);
   return Token(sym.TKORD_E);
}

<YYINITIAL> {TKLOG_AND}
{
  //  System.out.println("TKORD:" + yytext() + " char: " +yychar+" line: " +yyline);
   return Token(sym.TKLOG_AND);
}

<YYINITIAL> {TKLOG_OR}
{
  //  System.out.println("TKORD:" + yytext() + " char: " +yychar+" line: " +yyline);
   return Token(sym.TKLOG_OR);
}

<YYINITIAL> {TKLOG_DIF}
{
  //  System.out.println("TKORD:" + yytext() + " char: " +yychar+" line: " +yyline);
   return Token(sym.TKLOG_DIF);
}

<YYINITIAL> {TKTRUE}
{
  //  System.out.println("TKORD:" + yytext() + " char: " +yychar+" line: " +yyline);
   return Token(sym.TKTRUE);
}

<YYINITIAL> {TKFALSE}
{
  //  System.out.println("TKORD:" + yytext() + " char: " +yychar+" line: " +yyline);
   return Token(sym.TKFALSE);
}

<YYINITIAL> {NLINE} {  }

<YYINITIAL> .
{
    System.err.println("Error lexico en Linea:" + yyline + " , Caracter" + yychar +
        "- no se reconoce " + yytext());
        // return null;
}
